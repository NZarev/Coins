1. Основни стъпки в програмата
1.1. Входни данни
  Потребителят въвежда числова стойност (с плаваща запетая) за рестото. Това е сумата пари, която трябва да бъде разменена в монети.
  Стойността се преобразува в центове, за да се работи с цели числа, избягвайки проблеми с точността на изчисленията.1.2. Преобразуване на рестото
1.2. Преобразуване на рестото
 Рестото се умножава по 100 и се закръгля до цяло число, за да представлява центове.
  Пример: 2.73 → 273 цента.
1.3. Цикъл за изчисление 
  Създава се цикъл, който се изпълнява, докато останалата стойност (в центове) е по-голяма от 0.
  Във всяка итерация се проверява дали остатъкът може да бъде намален с най-голямата възможна стойност на монетите. Приоритетът е следният:
    2 лева (200 цента)
    1 лев (100 цента)
    50 стотинки
    20 стотинки
    10 стотинки
    5 стотинки
    2 стотинки
    1 стотинка
  Всяка успешна операция за премахване на стойността на монетата увеличава броя на използваните монети
1.4. Условия за намаляване
  Програмата използва if-else проверки за всяка стойност на монетите. Например:
    Ако остатъкът е по-голям или равен на 200, се изважда 200 и броячът на монетите се увеличава с 1.
    Следващата проверка е за 100, 50 и т.н.
2. Изходни данни
  Когато стойността на рестото достигне 0, цикълът приключва.
  На екрана се отпечатва общият брой монети, използвани за достигане на сумата.
3. Примерен сценарий

2.73

Изчисления:
Превръща се в центове: 273.
273 >= 200 → изважда се 200 → остава 73 (1 монета).
73 >= 50 → изважда се 50 → остава 23 (2 монети).
23 >= 20 → изважда се 20 → остава 3 (3 монети).
3 >= 2 → изважда се 2 → остава 1 (4 монети).
1 >= 1 → изважда се 1 → остава 0 (5 монети).

Изход:
5

4. Особености и проверки
Закръгляване на стойностите:

Преобразуването на плаващи числа (стойности с десетична точка) в цели числа е важно, за да се избегнат грешки при изчисленията с десетични стойности.
Подредба на монетите:

Приоритетът за изваждане започва от най-голямата монета към най-малката. Това осигурява минимален брой монети.
Обработка на гранични случаи:

Ако стойността е точно 0.00, резултатът е 0 монети.
Ако стойността е малко над граничните стойности (например 0.01), програмата правилно разпределя монетите.
